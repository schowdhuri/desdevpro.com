{"componentChunkName":"component---src-templates-article-js","path":"/blog/es2015-the-bits-use-part-1","result":{"data":{"mdx":{"id":"bc171fcb-cc3b-5bbf-90a3-4d42080cef83","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"category\": \"blog\",\n  \"date\": \"2015-06-07\",\n  \"coverImage\": \"ES.png\",\n  \"path\": \"es2015-the-bits-use-part-1\",\n  \"meta\": {\n    \"author\": \"Subir Chowdhuri\",\n    \"description\": \"ES2015 features I use everyday\",\n    \"keywords\": \"javascript, ES2015\"\n  },\n  \"summary\": \"The JS landscape is changing. Everyone is talking about the big change - ES2015 (previously called ES6) is here and is already being adopted at a strong pace. This is a first of a multi-part article detailing the features of ES2015 which excite me the most!\",\n  \"tags\": [\"javascript\", \"ES2015\"],\n  \"title\": \"ES2015: The Bits I Use - Part 1\",\n  \"type\": \"article\",\n  \"updated\": \"2015-06-08\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"ECMAScript 6 or ES6, now dubbed ECMAScript 2015, is the latest version of the ECMAScript standard. The last time the standard went through a radical change was way back in 2009 when ES5 was formalized. ES2015 brings big changes to the language. As you read this, support for the new standard is being built into browsers and JS engines.\"), mdx(\"h2\", {\n    \"id\": \"whats-new-in-es2015\"\n  }, \"What's new in ES2015?\"), mdx(\"p\", null, \"There is a bunch of new stuff in ES2015. A thorough discussion of every new feature is well beyond the scope of this article. Moreover, to keep the length of the article aligned to my attention span, I have broken it down into 2-minute-reads.  What follows is the first of several articles discussing the features which excite me the most!\"), mdx(\"h3\", {\n    \"id\": \"arrow-functions\"\n  }, \"Arrow Functions\"), mdx(\"p\", null, \"Users of CoffeeScript will recognise the familiar arrows. ES2015 Arrows are 'shorthand' function definitions. Arrow functions are a lean syntax to define \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"anonymous functions\"), \".\\nIn its simplest form, an arrow function can be something like this:\"), mdx(\"pre\", {\n    \"className\": \"grvsc-container monokai\",\n    \"data-language\": \"js\",\n    \"data-index\": \"0\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"grvsc-code\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"()\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"=>\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"{}\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"// ES5 equivalent: function() {}\")))), mdx(\"p\", null, \"The 'function' keyword is dropped, leaving just the list of parameters within parentheses and the body, separate by the arrow.\\nThey support both expression and statement bodies.\"), mdx(\"pre\", {\n    \"className\": \"grvsc-container monokai\",\n    \"data-language\": \"js\",\n    \"data-index\": \"1\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"grvsc-code\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10 mtki\"\n  }), \"x\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10 mtki\"\n  }), \"y\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \") \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"=>\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" {\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"var\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" z \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"5\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"return\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" (x \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"*\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" y) \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"+\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" z;\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"}\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ES5 equivalent\")), mdx(\"pre\", {\n    \"className\": \"grvsc-container monokai\",\n    \"data-language\": \"js\",\n    \"data-index\": \"2\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"grvsc-code\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10 mtki\"\n  }), \"x\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10 mtki\"\n  }), \"y\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"){\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"var\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" z \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"5\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"return\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" (x \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"*\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" y) \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"+\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" z;\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"}\")))), mdx(\"hr\", null), mdx(\"p\", null, \"If you need only one parameter, the parentheses can be omitted. Also, if all you need is one statement inside the body, you can skip the braces too. The lone statement is evaluated and the result is returned automatically. Note that if the function body has multiple statements, no value is automatically returned.\"), mdx(\"pre\", {\n    \"className\": \"grvsc-container monokai\",\n    \"data-language\": \"js\",\n    \"data-index\": \"3\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"grvsc-code\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"var\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" numbers \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" [\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \",\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"2\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \",\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"3\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \",\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"4\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \",\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"5\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \",\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"6\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \",\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"7\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \",\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"8\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \",\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"9\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"];\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"numbers.\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk5\"\n  }), \"filter\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10 mtki\"\n  }), \"x\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"=>\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" x\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"%\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"3\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"==\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"); \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"// [3, 6, 9]\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ES5 equivalent\")), mdx(\"pre\", {\n    \"className\": \"grvsc-container monokai\",\n    \"data-language\": \"js\",\n    \"data-index\": \"4\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"grvsc-code\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"n.\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk5\"\n  }), \"filter\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" (\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10 mtki\"\n  }), \"x\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \") {\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"return\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" x \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"%\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"3\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"==\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"});\")))), mdx(\"hr\", null), mdx(\"p\", null, \"Most importantly, \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"code inside the arrow function has the same lexical \", mdx(\"strong\", {\n    parentName: \"em\"\n  }, \"this\"), \" as their surrounding code.\"), \" This means, goodbye Function.prototype.bind or var that = this! Here are some examples to illustrate this:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ES2015: Arrow function - lexical this binding\")), mdx(\"pre\", {\n    \"className\": \"grvsc-container monokai\",\n    \"data-language\": \"js\",\n    \"data-index\": \"5\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"grvsc-code\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"var\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" counter \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" {\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  value : \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \",\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk5\"\n  }), \"run\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" : \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(){\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"      \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9\"\n  }), \"setInterval\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(() \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"=>\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" {\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"          \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \".value\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"++\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"// note reference to outer this\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"      }, \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"1000\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \");\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  }\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"};\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"counter.\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk5\"\n  }), \"run\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"();\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ES5 equivalent\")), mdx(\"pre\", {\n    \"className\": \"grvsc-container monokai\",\n    \"data-language\": \"js\",\n    \"data-index\": \"6\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"grvsc-code\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"var\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" counter \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" {\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  value: \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \",\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk5\"\n  }), \"run\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \": \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk5\"\n  }), \"run\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"() {\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"      \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"var\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" _this \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"      \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9\"\n  }), \"setInterval\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" () {\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"          _this.value\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"++\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"; \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"// note reference to outer this\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"      }, \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"1000\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \");\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  }\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"};\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"counter.\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk5\"\n  }), \"run\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"();\")))), mdx(\"p\", null, \"Arrow functions, like regular functions are instances of Function\"), mdx(\"pre\", {\n    \"className\": \"grvsc-container monokai\",\n    \"data-language\": \"js\",\n    \"data-index\": \"7\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"grvsc-code\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"var\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk5\"\n  }), \"convert\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10 mtki\"\n  }), \"fahr\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"=>\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" (\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"5\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"*\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"fahr \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"-\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"160\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"/\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"9\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"console\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9\"\n  }), \"log\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"typeof\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" convert); \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"// function\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"console\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9\"\n  }), \"log\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(convert \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"instanceof\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk5 mtku\"\n  }), \"Function\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"); \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"// true\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"// TypeError: not a constructor\")))), mdx(\"p\", null, \"Want to use arrow functions as immediately invokable function expressions (IIFE)?\"), mdx(\"pre\", {\n    \"className\": \"grvsc-container monokai\",\n    \"data-language\": \"js\",\n    \"data-index\": \"8\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"grvsc-code\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10 mtki\"\n  }), \"fahr\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"=>\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" (\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"5\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"*\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"fahr \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"-\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"160\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"/\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"9\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \")(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"98.4\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \");\")))), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"caveats\"\n  }, \"Caveats\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"1. Arrow functions can't be used as contructors\")), mdx(\"pre\", {\n    \"className\": \"grvsc-container monokai\",\n    \"data-language\": \"js\",\n    \"data-index\": \"9\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"grvsc-code\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"var\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk5\"\n  }), \"convert\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10 mtki\"\n  }), \"fahr\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"=>\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" (\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"5\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"*\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"fahr \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"-\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"160\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"/\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"9\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk9 mtki\"\n  }), \"var\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" obj \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"new\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk5 mtku\"\n  }), \"convert\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"98.4\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \");\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"// TypeError: not a constructor\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"2. Using bind, apply or call on arrow functions has no effect\")), mdx(\"p\", null, \"As mentioned above, the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"this\"), \" object is lexically bound. Moreover, it can't be changed. Using bind, call or apply doesn't throw an error, but silently fails.\"), mdx(\"h2\", {\n    \"id\": \"notes\"\n  }, \"Notes\"), mdx(\"h4\", {\n    \"id\": \"javascript-vs-ecmascript\"\n  }, \"JavaScript vs ECMAScript\"), mdx(\"p\", null, \"If you want to know the difference between ECMAScritpt and Javascript, I point you to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://stackoverflow.com/a/30113184/2590862\"\n  }), \"this StackOverflow answer\"), \". Quoting from the answer, \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"\\\"Javascript is considered the language which implements a standard called Ecmascript. There are also other languages that implement ECMAScript such as Lua (commonly used as a scripting language for games) and Actionscript (used for flash)\\\"\"), \".\"), mdx(\"h4\", {\n    \"id\": \"is-it-es6-or-es2015\"\n  }, \"Is it ES6 or ES2015?\"), mdx(\"p\", null, \"As if we didn't have enough confusion already! The specification has been officially renamed to ES2015. Check out the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://www.ecma-international.org/ecma-262/6.0/\"\n  }), \"ECMAScript 2015 Language Specification\"), \". Note that the URL path still contains \\\"6.0\\\" :)\"), mdx(\"p\", null, \"The nomenclature has probably been debated on every ES forum:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://esdiscuss.org/topic/javascript-2015\"\n  }), \"ES Discuss Thread\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://meta.stackoverflow.com/questions/297774/rename-es6-to-es2015\"\n  }), \"StackOverflow\"))), mdx(\"style\", {\n    \"className\": \"grvsc-styles\"\n  }, \"\\n  .grvsc-container {\\n    overflow: auto;\\n    -webkit-overflow-scrolling: touch;\\n    padding-top: 1rem;\\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\\n    padding-bottom: 1rem;\\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\\n    border-radius: 8px;\\n    border-radius: var(--grvsc-border-radius, 8px);\\n    font-feature-settings: normal;\\n  }\\n  \\n  .grvsc-code {\\n    display: inline-block;\\n    min-width: 100%;\\n  }\\n  \\n  .grvsc-line {\\n    display: inline-block;\\n    box-sizing: border-box;\\n    width: 100%;\\n    padding-left: 1.5rem;\\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\\n    padding-right: 1.5rem;\\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\\n  }\\n  \\n  .grvsc-line-highlighted {\\n    background-color: var(--grvsc-line-highlighted-background-color, transparent);\\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, transparent);\\n  }\\n  \\n  .monokai {\\n    background-color: #272822;\\n    color: #f8f8f2;\\n  }\\n  .monokai .mtku {\\n    text-decoration: underline;\\n    text-underline-position: under;\\n  }\\n  .monokai .mtki { font-style: italic; }\\n  .monokai .mtk1 { color: #F8F8F2; }\\n  .monokai .mtk9 { color: #66D9EF; }\\n  .monokai .mtk3 { color: #75715E; }\\n  .monokai .mtk10 { color: #FD971F; }\\n  .monokai .mtk7 { color: #F92672; }\\n  .monokai .mtk4 { color: #AE81FF; }\\n  .monokai .mtk5 { color: #A6E22E; }\\n\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"coverImage":{"publicURL":"/static/102bb1a575f12f8b876e650126776a3a/ES.png"},"date":"Jun 07, 2015","meta":{"author":"Subir Chowdhuri","description":"ES2015 features I use everyday","keywords":"javascript, ES2015"},"summary":"The JS landscape is changing. Everyone is talking about the big change - ES2015 (previously called ES6) is here and is already being adopted at a strong pace. This is a first of a multi-part article detailing the features of ES2015 which excite me the most!","title":"ES2015: The Bits I Use - Part 1","updated":"Jun 08, 2015"}}},"pageContext":{"id":"bc171fcb-cc3b-5bbf-90a3-4d42080cef83"}}}