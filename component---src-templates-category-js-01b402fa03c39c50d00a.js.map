{"version":3,"sources":["webpack:///./src/templates/category.js"],"names":["Wrapper","styled","div","medium","Title","h1","fontSize","contentWidth","colors","primary","Article","article","cardBg","copySizeMobile","Preview","section","fontCopy","Summary","Cover","img","pageQuery","CategoryIndex","props","mdx","data","articles","pageContext","config","title","frontmatter","meta","map","key","id","coverImage","src","childImageSharp","sizes","alt","dangerouslySetInnerHTML","__html","summary","className","to","path"],"mappings":"2FAAA,0HA+CA,IAAMA,EAAUC,IAAOC,IAAV,wEAAGD,CAAH,wCAEFE,KAKLC,EAAQH,IAAOI,GAAV,sEAAGJ,CAAH,iTACIK,IAAS,GAObC,IAEAJ,IACMG,IAAS,GAIeE,IAAOC,SAU1CC,EAAUT,IAAOU,QAAV,wEAAGV,CAAH,+KACGO,IAAOI,OAKRC,IAEJN,KAOLO,EAAUb,IAAOc,QAAV,wEAAGd,CAAH,0GAEFE,IAIQa,IACFV,IAAS,IAKpBW,EAAUhB,IAAOC,IAAV,wEAAGD,CAAH,4BAIPiB,EAAQjB,IAAOkB,IAAV,sEAAGlB,CAAH,uFAQEmB,EAAS,aAiBPC,UAzHf,SAAuBC,GACrB,IAAMC,EAAMD,EAAME,KAAKD,IACjBE,EAAWH,EAAMI,YAAYD,SAC7BE,EAAS,CACbC,MAAOL,EAAIM,YAAYD,MACvBE,KAAMP,EAAIM,YAAYC,MAExB,OACE,kBAAC,IAAD,CAAQH,OAAQA,GACd,kBAAC3B,EAAD,KACE,kBAACI,EAAD,KAAQmB,EAAIM,YAAYD,OACvBH,EAASM,KAAI,SAAApB,GAAO,eACnB,kBAACD,EAAD,CAASsB,IAAKrB,EAAQsB,KAClBtB,EAAQuB,YACR,kBAAChB,EAAD,CACEiB,IAAG,UAAExB,EAAQuB,WAAWE,uBAArB,iBAAE,EAAoCC,aAAtC,aAAE,EAA2CF,IAChDG,IAAK3B,EAAQiB,QAGjB,kBAACd,EAAD,KACE,4BAAKH,EAAQiB,OACb,kBAACX,EAAD,CAASsB,wBAAyB,CAAEC,OAAQ7B,EAAQ8B,WACpD,kBAAC,IAAD,CAAMC,UAAU,MAAMC,GAAIhC,EAAQiC,MAAlC","file":"component---src-templates-category-js-01b402fa03c39c50d00a.js","sourcesContent":["import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nimport Layout from \"../components/Layout\";\nimport {\n  medium,\n  fontSize,\n  colors,\n  copySizeMobile,\n  fontCopy,\n  contentWidth\n} from \"../constants/theme\";\n\nfunction CategoryIndex(props) {\n  const mdx = props.data.mdx;\n  const articles = props.pageContext.articles;\n  const config = {\n    title: mdx.frontmatter.title,\n    meta: mdx.frontmatter.meta\n  };\n  return (\n    <Layout config={config}>\n      <Wrapper>\n        <Title>{mdx.frontmatter.title}</Title>\n        {articles.map(article => (\n          <Article key={article.id}>\n            {!article.coverImage || (\n              <Cover\n                src={article.coverImage.childImageSharp?.sizes?.src}\n                alt={article.title}\n              />\n            )}\n            <Preview>\n              <h2>{article.title}</h2>\n              <Summary dangerouslySetInnerHTML={{ __html: article.summary }} />\n              <Link className=\"btn\" to={article.path}>\n                Read More\n              </Link>\n            </Preview>\n          </Article>\n        ))}\n      </Wrapper>\n    </Layout>\n  );\n}\n\nconst Wrapper = styled.div`\n  padding: 1rem;\n  @media ${medium} {\n    padding: 0;\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: ${fontSize[2]};\n  font-weight: 300;\n  line-height: 1.6em;\n  margin: 70px auto 40px;\n  max-width: 40rem;\n  position: relative;\n  text-transform: uppercase;\n  width: ${contentWidth};\n\n  @media ${medium} {\n    font-size: ${fontSize[0]};\n    margin: 80px auto;\n  }\n  &:after {\n    background: none repeat scroll 0 0 ${colors.primary};\n    bottom: -15px;\n    content: \"\";\n    height: 4px;\n    left: 0;\n    position: absolute;\n    width: 90px;\n  }\n`;\n\nconst Article = styled.article`\n  background: ${colors.cardBg};\n  border-radius: 2px;\n  box-shadow: 0 1px 4px -2px rgba(0, 0, 0, 0.3);\n  margin: 40px auto;\n  max-width: 40rem;\n  font-size: ${copySizeMobile};\n  padding: 0;\n  width: ${contentWidth};\n\n  *:first-child {\n    margin-top: 0;\n  }\n`;\n\nconst Preview = styled.section`\n  padding: 20px 10px;\n  @media ${medium} {\n    padding: 50px 60px;\n  }\n  h2 {\n    font-family: ${fontCopy};\n    font-size: ${fontSize[5]};\n    margin-bottom: 1rem;\n  }\n`;\n\nconst Summary = styled.div`\n  padding: 0.5rem 0 1rem;\n`;\n\nconst Cover = styled.img`\n  border-radius: 2px 2px 0 0;\n  display: block;\n  height: 300px;\n  object-fit: cover;\n  width: 100%;\n`;\n\nexport const pageQuery = graphql`\n  query getCategory($id: String!) {\n    mdx(id: { eq: $id }) {\n      id\n      excerpt\n      frontmatter {\n        title\n        summary\n        meta {\n          description\n          keywords\n        }\n      }\n    }\n  }\n`;\n\nexport default CategoryIndex;\n"],"sourceRoot":""}